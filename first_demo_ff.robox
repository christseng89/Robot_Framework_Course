*** Settings ***
Library    SeleniumLibrary
Library    BuiltIn
Library    Collections
Resource    config.robot  # ✅ Import credentials from an external file

*** Variables ***
${TIMEOUT}          10s  # Increased timeout
${TIMEOUT_SHORT}    5s

${BROWSER}          Firefox  # Changed to Firefox
${LOGIN_URL}        https://accounts.google.com/signin

${EMAIL}            ${EMAIL_ACCOUNT}  # ✅ Load from config file
${EMAIL_ERROR_XPATH}  //div[@class="dEOOab RxsGPe"]/div[@class="Ekjuhf Jj6Lae"]

${PASSWORD}         ${EMAIL_PASSWORD}  # ✅ Load from config file
${PASSWORD_ERROR_XPATH}  //span[contains(text(),"Wrong password")]  # Correct XPath for "Wrong password"

${GMAIL_LOGO_XPATH}  //*[@id="gb"]/div[2]/div[1]/div[4]/div/a  # Given XPath for Gmail Logo

*** Test Cases ***
Login To Gmail With Verification
    # ✅ Create FirefoxOptions object
    ${firefox_options}=    Evaluate    selenium.webdriver.FirefoxOptions()    modules=selenium.webdriver

    # ✅ Add Firefox arguments for private mode and other settings
    Call Method    ${firefox_options}    add_argument    --private  # Enable private mode
    Call Method    ${firefox_options}    add_argument    --disable-blink-features\=AutomationControlled
    Call Method    ${firefox_options}    add_argument    --start-maximized
    Call Method    ${firefox_options}    add_argument    --disable-gpu

    # ✅ Open Firefox with configured options
    Open Browser    ${LOGIN_URL}    ${BROWSER}    options=${firefox_options}
    Set Selenium Implicit Wait    ${TIMEOUT}

    # ✅ Enter Email and Click Next
    Wait Until Element Is Visible    name:identifier    timeout=${TIMEOUT}
    Input Text    name:identifier    ${EMAIL}
    Sleep    3s  # Add a delay to mimic human behavior
    Click Element    //*[@id="identifierNext"]

    # Check invalid email address
    ${is_email_invalid}=    Run Keyword And Return Status    Wait Until Element Is Visible    ${EMAIL_ERROR_XPATH}    timeout=${TIMEOUT_SHORT}

    Run Keyword If    ${is_email_invalid}    Run Keywords
    ...    Log    Incorrect Email! Couldn’t find Google Account.
    ...    Capture Page Screenshot
    ...    Fail    Login failed due to incorrect email.

    # ✅ Enter Password and Click Next
    Wait Until Element Is Visible    name:Passwd    timeout=${TIMEOUT}
    Input Text    name:Passwd    ${PASSWORD}
    Sleep    3s  # Add a delay to mimic human behavior
    Click Element    //*[@id="passwordNext"]

    # Check invalid password
    ${is_password_invalid}=    Run Keyword And Return Status    Wait Until Element Is Visible    ${PASSWORD_ERROR_XPATH}    timeout=${TIMEOUT_SHORT}

    Run Keyword If    ${is_password_invalid}    Run Keywords
    ...    Log    Incorrect Password! Please try again.
    ...    Capture Page Screenshot
    ...    Fail    Login failed due to incorrect password.

    # ✅ Verification: Check for Gmail logo (20s timeout)
    ${is_logged_in}=    Run Keyword And Return Status    Wait Until Element Is Visible    ${GMAIL_LOGO_XPATH}    timeout=${TIMEOUT}

    # ✅ Determine test result
    Run Keyword If    ${is_logged_in}    Log    Gmail login successful!
    Run Keyword If    not ${is_logged_in}    Run Keywords
    ...    Log    Gmail login failed!
    ...    Capture Page Screenshot
    ...    Fail    Login was not successful.

    # ✅ Close browser after test
    Close Browser